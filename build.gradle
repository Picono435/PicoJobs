//TODO: Javadocs
//TODO: Relocate slimJar

import org.apache.tools.ant.filters.*

plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java-library'
    id 'maven-publish'
    id 'net.nemerosa.versioning' version '3.0.0'
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'dev.architectury.loom' version '1.4-SNAPSHOT' apply false
    id 'signing'
}

sourceCompatibility = '17'
targetCompatibility = '17'

if (System.getenv("STABLE_BUILD") == '0') {
    rootProject.version = versioning.info.build + "-DEV"
} else {
    rootProject.version = "1.0-pre"
}

subprojects {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'signing'

    repositories {
        maven {
            name = "PiconoDev Repository"
            url "https://repo.piconodev.com/repository/maven-snapshots"
        }
    }

    configurations {
        shadow
    }

    shadowJar {
        archiveBaseName.set(rootProject.archives_base_name)
        archiveVersion.set(rootProject.version)
        configurations = [project.configurations.shadow]
    }

    /*signing {
        useGpgCmd()
        sign configurations.shadow
    }*/
}

allprojects {
    apply plugin: 'java-library'
    apply plugin: 'signing'

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.version
    group = rootProject.group
    description = rootProject.description

    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier.set('sources')
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }

    processResources {
        filter ReplaceTokens, tokens: [
                "name": rootProject.property("name"),
                "version": rootProject.property("version"),
                "description": rootProject.property("description")
        ]
    }
}

configure([project(':common-mod'), project(':fabric'), project(':forge')]) {
    apply plugin: "architectury-plugin"
    apply plugin: "dev.architectury.loom"

    base {
        archivesName = rootProject.archives_base_name
    }

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.officialMojangMappings()
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }

    architectury {
        minecraft = rootProject.minecraft_version
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = 'picojobs'
            version = project.version
            from components.java

            pom {
                name = "PicoJobs"
                description = "An amazing plugin that allows you to create your own jobs for your players. The plugin is 100% configurable so you can change everything you see, it is also open-source if you want to take a look on how it's made."
                url = "https://github.com/Picono435/PicoJobs"
                licenses {
                    license {
                        name = "The MIT License"
                        url = "https://opensource.org/licenses/MIT"
                    }
                }
                developers {
                    developer {
                        id = "picono435"
                        name = "Picono435"
                        email = "picono435@gmail.com"
                    }
                }
                scm {
                    connection = "https://github.com/Picono435/PicoJobs"
                    developerConnection = "https://github.com/Picono435/PicoJobs.git"
                    url = "https://github.com/Picono435/PicoJobs"
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username System.getenv("REPO_USER")
                password System.getenv("REPO_PASSWORD")
            }

            url = 'https://repo.piconodev.com/repository/maven-releases/'
        }
    }
}