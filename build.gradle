import org.apache.tools.ant.filters.*

plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'io.github.slimjar' version '1.3.0'
    id 'java'
    id 'maven-publish'
    id 'net.nemerosa.versioning' version '2.15.1'
}

group = 'com.gmail.picono435'
description = 'The best jobs plugin ever! You can customize every single thing on it.'
sourceCompatibility = '17'
targetCompatibility = '17'

if (System.getenv("STABLE_BUILD") != null) {
    if (System.getenv("STABLE_BUILD") == '0') {
        version versioning.info.build + "-DEV"
    } else {
        version "1.0-beta-7a"
    }
} else {
    version "1.0-beta-7a"
}

repositories {
    mavenCentral()

    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'

        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }

    maven {
        url = 'https://jitpack.io'
        content {
            includeGroupByRegex "com\\.github.*"
        }
    }

    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
        content {
            includeGroupByRegex "me\\.clip.*"
        }
    }

    maven {
        url = 'https://repo.rosewooddev.io/repository/public/'
        content {
            includeGroupByRegex "org\\.black_ixx.*"
        }
    }

    maven {
        url "https://maven.enginehub.org/repo/"

        content {
            includeGroupByRegex "com\\.sk89q.*"
        }
    }

    mavenLocal();
}

dependencies {
    // Slimjar
    shadow implementation(slimjar("1.2.6"))
    // Spigot
    compileOnly 'org.spigotmc:spigot-api:1.19.4-R0.1-SNAPSHOT'
    // Storage Methods
    slim 'org.mongodb:mongodb-driver-sync:4.9.0'
    slim 'com.zaxxer:HikariCP:4.0.3'
    slim 'com.h2database:h2:2.1.214'
    slim 'org.xerial:sqlite-jdbc:3.41.2.1'
    slim 'org.mariadb.jdbc:mariadb-java-client:3.1.2'
    slim 'mysql:mysql-connector-java:8.0.32'
    shadow implementation('org.spongepowered:configurate-core:4.1.2')
    shadow implementation('org.spongepowered:configurate-gson:4.1.2')
    shadow implementation('org.spongepowered:configurate-yaml:4.1.2')
    shadow implementation('org.spongepowered:configurate-hocon:4.1.2')
    // Plugins API
    compileOnly('me.clip:placeholderapi:2.11.3') { transitive = false }
    compileOnly('com.github.MilkBowl:VaultAPI:1.7.1') { transitive = false }
    compileOnly('org.black_ixx:playerpoints:3.2.5') { transitive = false }
    compileOnly('com.github.Realizedd:TokenManager:3.2.4') { transitive = false }
    compileOnly('com.sk89q.worldguard:worldguard-bukkit:7.0.8-SNAPSHOT') { transitive = true }
    compileOnly('com.github.TechFortress:GriefPrevention:16.18') { transitive = false }
    // Other libraries
    shadow implementation('com.github.mkremins:fanciful:18dc039f5b')
    slim 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
    slim 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.14.2'
    shadow implementation('org.apache.maven:maven-artifact:3.9.1')
    shadow implementation('org.bstats:bstats-bukkit:3.0.1')
    testImplementation 'com.github.seeseemelk:MockBukkit-v1.16:1.0.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testCompileOnly 'org.spigotmc:spigot-api:1.19.4-R0.1-SNAPSHOT'
    testCompileOnly('me.clip:placeholderapi:2.11.3') { transitive = false }
    testCompileOnly('com.github.MilkBowl:VaultAPI:1.7.1') { transitive = false }
    testCompileOnly('org.black_ixx:playerpoints:3.2.5') { transitive = false }
    testCompileOnly('com.github.Realizedd:TokenManager:3.2.4') { transitive = false }
    testCompileOnly('com.sk89q.worldguard:worldguard-bukkit:7.0.8-SNAPSHOT') { transitive = true }
    testCompileOnly('com.github.TechFortress:GriefPrevention:16.18') { transitive = false }
}

slimJar {
    relocate 'org.mongodb', 'com.gmail.picono435.picojobs.libs.mongodb'
    relocate 'com.zaxxer', 'com.gmail.picono435.picojobs.libs.zaxxer'
    relocate 'org.h2', 'com.gmail.picono435.picojobs.libs.h2'
    relocate 'com.h2database', 'com.gmail.picono435.picojobs.libs.h2database'
    relocate 'org.xerial', 'com.gmail.picono435.picojobs.libs.xerial'
    relocate 'org.mariadb.jdbc', 'com.gmail.picono435.picojobs.libs.mariadb'
    relocate 'com.mysql', 'com.gmail.picono435.picojobs.libs.mysql'
    relocate 'com.fasterxml.jackson', 'com.gmail.picono435.picojobs.libs.jackson'
}

shadowJar {
    relocate 'org.bstats', 'com.gmail.picono435.picojobs.metrics'
    relocate 'org.apache', 'com.gmail.picono435.picojobs.libs.apache'
    relocate 'org.spongepowered', 'com.gmail.picono435.picojobs.libs.spongepowered'
    relocate 'com.github.mkremins', 'com.gmail.picono435.picojobs.libs.mkremins'
    relocate 'io.github.slimjar', 'com.gmail.picono435.picojobs.libs.slimjar'
    archiveClassifier = ''
}

processResources {
    filter ReplaceTokens, tokens: [
            "name": project.property("name"),
            "version": project.property("version"),
            "description": project.property("description")
    ]
}

test {
    useJUnitPlatform()
}

rootProject.tasks.named("processResources") {
    duplicatesStrategy = 'include'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}

compileTestJava.dependsOn(shadowJar)
